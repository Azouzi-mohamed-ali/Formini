{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseurl = \"http://localhost:3001/api/users\";\n  }\n  // Sign-up\n  signUp(user) {\n    return this.http.post(this.baseurl + '/register/', user);\n  }\n  // Sign-in\n  signIn(user) {\n    return this.http.post(this.baseurl + \"/login/\", user).subscribe({\n      next: res => {\n        localStorage.setItem('access_token', res.token);\n        localStorage.setItem('refresh_token', res.refreshToken);\n      },\n      error: e => {\n        console.log(e);\n        alert(\"Error !\");\n      },\n      complete: () => {\n        this.router.navigate(['products']);\n      }\n    });\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n  doLogout() {\n    let removeToken = localStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['login']);\n    }\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","router","baseurl","signUp","user","post","signIn","subscribe","next","res","localStorage","setItem","token","refreshToken","error","e","console","log","alert","complete","navigate","getToken","getItem","isLoggedIn","authToken","doLogout","removeToken","removeItem","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\acer\\Desktop\\projet integration\\formini\\src\\app\\authen\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseurl=\"http://localhost:3001/api/users\"\n  constructor(private http: HttpClient, public router: Router) { }\n\n  // Sign-up\n  signUp(user: User): Observable<any> {\n\n    return this.http.post(this.baseurl + '/register/', user);\n  }\n  // Sign-in\n  signIn(user: any) {\n    return this.http\n      .post<any>(this.baseurl + \"/login/\" , user)\n      .subscribe({\n          next: (res:any) => {\n            localStorage.setItem('access_token', res.token);\n\n            localStorage.setItem('refresh_token', res.refreshToken);\n\n\n          },\n          error: (e:any) => {\n            console.log(e);\n            alert(\"Error !\")\n          },\n          complete: () => {\n            this.router.navigate(['products']);\n           }\n      });\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n  doLogout() {\n    let removeToken = localStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB,EAASC,MAAc;IAAvC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAD3C,KAAAC,OAAO,GAAC,iCAAiC;EACc;EAE/D;EACAC,MAAMA,CAACC,IAAU;IAEf,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACH,OAAO,GAAG,YAAY,EAAEE,IAAI,CAAC;EAC1D;EACA;EACAE,MAAMA,CAACF,IAAS;IACd,OAAO,IAAI,CAACJ,IAAI,CACbK,IAAI,CAAM,IAAI,CAACH,OAAO,GAAG,SAAS,EAAGE,IAAI,CAAC,CAC1CG,SAAS,CAAC;MACPC,IAAI,EAAGC,GAAO,IAAI;QAChBC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,GAAG,CAACG,KAAK,CAAC;QAE/CF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,GAAG,CAACI,YAAY,CAAC;MAGzD,CAAC;MACDC,KAAK,EAAGC,CAAK,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACdG,KAAK,CAAC,SAAS,CAAC;MAClB,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACnC;KACJ,CAAC;EACN;EACAC,QAAQA,CAAA;IACN,OAAOX,YAAY,CAACY,OAAO,CAAC,cAAc,CAAC;EAC7C;EACA,IAAIC,UAAUA,CAAA;IACZ,IAAIC,SAAS,GAAGd,YAAY,CAACY,OAAO,CAAC,cAAc,CAAC;IACpD,OAAOE,SAAS,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;EAC1C;EACAC,QAAQA,CAAA;IACN,IAAIC,WAAW,GAAGhB,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;IACzD,IAAID,WAAW,IAAI,IAAI,EAAE;MACvB,IAAI,CAACzB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAAC,QAAAQ,CAAA,G;qBA1CU9B,WAAW,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrC,WAAW;IAAAsC,OAAA,EAAXtC,WAAW,CAAAuC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}